// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  avatar    String
  isPremium Boolean
  servers   Server[]
  matches   Match?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id           Int               @id @default(autoincrement())
  dGuildId     String
  xBotUserId   Int
  xBotUser     User              @relation(fields: [xBotUserId], references: [id])
  name         String
  settings     SeverSetting?
  guildMatches ServerUserMatche?
  matches      Match?
  modules      ServerModule?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model Module {
  id                 Int           @id @default(autoincrement())
  name               String
  description        String
  isPremium          Boolean       @default(false)
  defaultPermissions Json
  serversModule      ServerModule?
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
}

model SeverSetting {
  id               Int      @id @default(autoincrement())
  xBotServerId     Int      @unique
  xBotServer       Server   @relation(fields: [xBotServerId], references: [id])
  botNicName       String   @default("xBot")
  botCommandPrefix String   @default("*")
  isBotActive      Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Match {
  id             Int      @id @default(autoincrement())
  xBotUserId     Int      @unique
  xBotServerId   Int      @unique
  xBotUser       User     @relation(fields: [xBotUserId], references: [id])
  xBotServer     Server   @relation(fields: [xBotServerId], references: [id])
  lastMatchDate  DateTime
  nextMatchDate  DateTime
  matchFrequency Int      @default(7)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model ServerUserMatche {
  id             Int      @id @default(autoincrement())
  xBotServerId   Int      @unique
  xBotServer     Server   @relation(fields: [xBotServerId], references: [id])
  dUserId        String
  dUserMatchedId String
  isMatchActive  Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model ServerModule {
  id                Int      @id @default(autoincrement())
  xBotServerId      Int      @unique
  xBotServer        Server   @relation(fields: [xBotServerId], references: [id])
  xBotModuleId      Int      @unique
  xBotModule        Module   @relation(fields: [xBotModuleId], references: [id])
  isActive          Boolean  @default(false)
  modulePermissions Json
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
